//
// Olga's code brought back memories of the old SpiroGraph toy.
// I could not resist. For those who don't know SpiroGraph was
// a set plastic gears with holes in them. There was a large
// outer Ring (with teeth on the inside) you pinned down to paper.
// You then choose a small gear (with teeth on the outside) to
// place inside the larger gear.
//
// You stick a pen into one of the holes on the small gear and
// crank it around to get amazing patterns. You typically would
// draw several patterns with different gears and colors on top
// of one another.
//
// The "pen" does not have to be on the inner gear, it can be
// and imaginary point outside it.
//
// The inner gear does not have to smaller than the outer gear.
//
// The stepsize can be large (45 ot 90 degrees) to generate
// some other interesting patterns.
//
// As with SpiroGraph it's interesting in trying to determine
// how many rotations it will take to "close" that pattern.
//
// Just like SpiroGraph you sometimes end up with boring pictures and
// when you adjust a parameter just slightly you get something worth
// looking at.
//
// r1 = Radius of outer gear
// r2 = Radius of inner gear
// p1 = Distance of pen from center of inner gear
// rot = Number of times to spin the inner gear within the outer gear
// stepsize = Number of degrees to move between each vector
//
// This could be easily be solved directly with trig. (no FD's) and
// could be made much more efficient, anyone care to try.
//
// - George Mills (Sun, 09 Mar 1997 09:32:42 -0500)
clear
function examples () {
	clear
	spirograph 180 200 30 10 2
	pause 2000 //MessageBox [] [Continue]
	clear
	spirograph 90 200 60 20 2
	pause 2000 //MessageBox [] [Continue]
	clear
	spirograph 200 60 40 5 4
	pencolor red //setpencolor [255 0 0]
	spirograph 200 70 40 10 4
	pencolor blue //setpencolor [0 0 0]
	pause 2000 //MessageBox [] [Continue]
	clear
	spirograph 100 210 40 24 45
	//MessageBox [] [Continue]
	pause 2000 
	clear
	spirograph 100 210 40 24 90
}

function spirograph (r1 r2 p1 rot stepsize) {
	center
	center
	// Calculate how much the inner gear rotates per stepsize of outer rotation
	var innerstep [* stepsize [/ r1 r2]]
	//Init angle of inner gear
	
	// Save where we started
	forward 30
	var innerangle 0
	var origpos [getpos]
    var prevpos [getpos]
	//forward 20
	// repeat for rotations (each broken down into stepsize)
	//rot*360/:stepsize ~//damn lack of clarity

	repeat [/ [* rot 360] stepsize] {
		
		penup
		// Move out to center of small gear
		forward [- r1 r2]
		// Rotate small gear
		right innerangle
		// Move out to pen position on small gear and drop pen
		forward p1

		pendown
		forward 12
		// Save where we are so we can return
		var savepos [getpos]

		// Draw line back to prev position
		setpos prevpos
		// Go back
		setpos savepos

		// Save current position and next times prev position
		= prevpos savepos

		// Back to center of small gear

		penup
		back p1

		// Undo rotation of small gear

		left innerangle

		// Calculate rotation of small gear for next time around

		let innerangle [+ innerangle innerstep]

		//Back to center of outer gear

		back [- r1 r2]

		// Rotate position of small gear with in outer gear

		right stepsize
		paint
	}
}
clear
examples